// eslint-disable-next-line @typescript-eslint/no-require-imports,no-undef
const js = require('@eslint/js');
// eslint-disable-next-line @typescript-eslint/no-require-imports,no-undef
const tseslint = require('typescript-eslint');
// eslint-disable-next-line @typescript-eslint/no-require-imports,no-undef
const importPlugin = require('eslint-plugin-import');

module.exports = [
    js.configs.recommended,
    ...tseslint.configs.recommended,
    {
        files: ['**/*.ts'],
        languageOptions: {
            ecmaVersion: 2021,
            sourceType: 'module',
            parser: tseslint.parser,
            parserOptions: {
                project: './tsconfig.json',
            },
        },
        plugins: {
            'import': importPlugin,
        },
        settings: {
            'import/resolver': {
                node: {
                    extensions: ['.ts'],
                },
            },
        },
        rules: {
            // TypeScript rules
            '@typescript-eslint/ban-types': 'off',
            '@typescript-eslint/no-unused-vars': 'off',
            '@typescript-eslint/no-var-requires': 'off',
            '@typescript-eslint/no-explicit-any': 'off',

            // Import rules
            'import/named': 'off',
            'import/no-cycle': ['error', { maxDepth: Infinity }],
            'import/order': [
                'error',
                {
                    alphabetize: { caseInsensitive: true, order: 'asc' },
                    groups: ['builtin', 'external', 'internal'],
                    'newlines-between': 'always',
                },
            ],

            // General rules
            'accessor-pairs': 'error',
            'array-bracket-spacing': 'error',
            'array-callback-return': 'off',
            'arrow-body-style': 'error',
            'arrow-parens': 'error',
            'arrow-spacing': 'error',
            'block-scoped-var': 'error',
            'block-spacing': 'error',
            'brace-style': 'error',
            'comma-dangle': ['error', 'always-multiline'],
            'comma-spacing': 'error',
            'comma-style': 'error',
            'complexity': 'off',
            'computed-property-spacing': 'error',
            'consistent-this': 'error',
            'curly': 'error',
            'default-case': 'error',
            'default-case-last': 'error',
            'default-param-last': 'error',
            'dot-location': ['error', 'property'],
            'dot-notation': 'off',
            'eol-last': 'error',
            'eqeqeq': 'error',
            'func-call-spacing': 'error',
            'func-name-matching': 'error',
            'func-names': 'error',
            'generator-star-spacing': 'error',
            'global-require': 'warn',
            'grouped-accessor-pairs': 'error',
            'guard-for-in': 'error',
            'key-spacing': 'error',
            'keyword-spacing': 'error',
            'line-comment-position': 'error',
            'linebreak-style': 'off',
            'max-nested-callbacks': 'error',
            'max-statements-per-line': 'error',
            'multiline-ternary': ['error', 'always-multiline'],
            'new-cap': 'error',
            'new-parens': 'error',
            'newline-per-chained-call': 'error',
            'no-alert': 'error',
            'no-array-constructor': 'error',
            'no-async-promise-executor': 'warn',
            'no-caller': 'error',
            'no-case-declarations': 'warn',
            'no-console': ['warn', { allow: ['warn', 'error'] }],
            'no-constructor-return': 'error',
            'no-div-regex': 'error',
            'no-duplicate-imports': 'error',
            'no-else-return': 'error',
            'no-empty-function': 'warn',
            'no-eq-null': 'error',
            'no-eval': 'error',
            'no-extend-native': 'error',
            'no-extra-bind': 'error',
            'no-extra-label': 'error',
            'no-floating-decimal': 'error',
            'no-implicit-coercion': 'error',
            'no-implicit-globals': 'error',
            'no-implied-eval': 'error',
            'no-inline-comments': 'error',
            'no-invalid-this': 'error',
            'no-iterator': 'error',
            'no-label-var': 'error',
            'no-labels': 'error',
            'no-lone-blocks': 'error',
            'no-lonely-if': 'error',
            'no-loop-func': 'error',
            'no-loss-of-precision': 'error',
            'no-multi-assign': 'error',
            'no-multi-spaces': 'error',
            'no-multi-str': 'error',
            'no-multiple-empty-lines': 'error',
            'no-new-func': 'error',
            'no-new-object': 'error',
            'no-new-wrappers': 'error',
            'no-octal-escape': 'error',
            'no-param-reassign': 'off',
            'no-plusplus': 'off',
            'no-proto': 'error',
            'no-return-assign': 'off',
            'no-script-url': 'error',
            'no-self-compare': 'error',
            'no-sequences': 'error',
            'no-sync': 'off',
            'no-tabs': 'error',
            'no-template-curly-in-string': 'error',
            'no-ternary': 'off',
            'no-throw-literal': 'error',
            'no-trailing-spaces': 'error',
            'no-undef-init': 'error',
            'no-unmodified-loop-condition': 'error',
            'no-unneeded-ternary': 'error',
            'no-unreachable-loop': 'error',
            'no-unused-expressions': 'warn',
            'no-unused-vars': 'warn',
            'no-useless-call': 'error',
            'no-useless-computed-key': 'error',
            'no-useless-concat': 'error',
            'no-useless-constructor': 'error',
            'no-useless-escape': 'off',
            'no-useless-rename': 'error',
            'no-useless-return': 'error',
            'no-var': 'error',
            'no-void': 'off',
            'no-warning-comments': [1, { terms: ['todo'] }],
            'no-whitespace-before-property': 'error',
            'object-curly-spacing': ['error', 'always'],
            'object-shorthand': 'error',
            'one-var': ['error', 'never'],
            'one-var-declaration-per-line': 'error',
            'operator-assignment': 'error',
            'operator-linebreak': ['error', 'after', { overrides: { ':': 'ignore', '?': 'ignore' } }],
            'padded-blocks': ['error', 'never'],
            'prefer-arrow-callback': 'error',
            'prefer-const': 'error',
            'prefer-exponentiation-operator': 'error',
            'prefer-named-capture-group': 'off',
            'prefer-numeric-literals': 'error',
            'prefer-object-spread': 'error',
            'prefer-promise-reject-errors': 'error',
            'prefer-regex-literals': 'error',
            'prefer-rest-params': 'error',
            'prefer-spread': 'error',
            'prefer-template': 'error',
            'quote-props': ['error', 'as-needed', { keywords: true, unnecessary: true }],
            'quotes': ['error', 'single'],
            'radix': 'error',
            'require-await': 'warn',
            'rest-spread-spacing': 'error',
            'semi': 'error',
            'semi-spacing': 'error',
            'semi-style': 'error',
            'sort-imports': ['error', { ignoreDeclarationSort: true, ignoreMemberSort: true }],
            'sort-vars': 'error',
            'space-before-blocks': 'error',
            'space-before-function-paren': 'error',
            'space-in-parens': 'error',
            'space-infix-ops': 'error',
            'space-unary-ops': 'error',
            'spaced-comment': 'error',
            'strict': 'error',
            'switch-colon-spacing': 'error',
            'symbol-description': 'error',
            'template-curly-spacing': 'error',
            'template-tag-spacing': 'error',
            'unicode-bom': 'error',
            'vars-on-top': 'error',
            'wrap-iife': 'error',
            'wrap-regex': 'error',
            'yield-star-spacing': 'error',
            'yoda': 'error',
        },
    },
];
